<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Welcome to Prafull&#39;s blog</title>
    <link>http://localhost:1313/posts/tags/java/</link>
    <description>Recent content in Java on Welcome to Prafull&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 07 Sep 2022 12:39:26 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Interfaces in Java</title>
      <link>http://localhost:1313/posts/posts/interfaces-in-java/</link>
      <pubDate>Wed, 07 Sep 2022 12:39:26 +0530</pubDate>
      <guid>http://localhost:1313/posts/posts/interfaces-in-java/</guid>
      <description>In java, whenever you pass some value to some function, the type of value that you pass to that function defines the contract. As long as your the values satisfies the contract you are good to go.&#xA;Interface is good example of it. Interaface can be created to enforce some contract.&#xA;Let&amp;rsquo;s take example of payment using some payment instrument like credit card, debit card or net banking.&#xA;What contract these all should satisfy so that amount can withdrawn from these.</description>
    </item>
    <item>
      <title>Testing Java Code Using Junit</title>
      <link>http://localhost:1313/posts/posts/testing-java-code-using-junit/</link>
      <pubDate>Sun, 04 Sep 2022 11:37:32 +0530</pubDate>
      <guid>http://localhost:1313/posts/posts/testing-java-code-using-junit/</guid>
      <description>Conecpts Container&#xA;A node in test tree that contains other tests or container&#xA;Test&#xA;A method in test tree that checks the assertion.&#xA;Life Cycle methods&#xA;Methods which are executed at particular moment of execution of tree node. Generall they are marked using @BeforeEach, @AfterEach, @BeforeAll and @AfterAll.&#xA;Test Class&#xA;Any top-level class, static member class or nested class that contains at least one method i.e. container. Test classes must not be abstract and must have a single constructor.</description>
    </item>
    <item>
      <title>Separating Src and Class Files in Java</title>
      <link>http://localhost:1313/posts/posts/separating-src-and-class-files-in-java/</link>
      <pubDate>Sat, 03 Sep 2022 15:54:33 +0530</pubDate>
      <guid>http://localhost:1313/posts/posts/separating-src-and-class-files-in-java/</guid>
      <description>src directory It is directory where all the .java file are stored. Generally in structure which your package should follow.&#xA;out directory It is directory where all the .class file are stored. It also follows structure of package.&#xA;Example&#xA;├── out │ └── com │ └── tw │ └── step │ └── graphics │ ├── Canvas.class │ ├── ShapesMain.class │ └── shapes │ ├── Circle.class │ └── Rectangle.class ├── shapes.jar └── src └── com └── tw └── step └── graphics ├── Canvas.</description>
    </item>
    <item>
      <title>Jar Files in Java</title>
      <link>http://localhost:1313/posts/posts/jar-files-in-java/</link>
      <pubDate>Sat, 03 Sep 2022 15:18:53 +0530</pubDate>
      <guid>http://localhost:1313/posts/posts/jar-files-in-java/</guid>
      <description>JAR file (Java Archive) JAR file is used to bundle the software files. This makes it easier to send across the devices and run it without hussle.&#xA;Syntax jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ... Options c : Create jar file. t : Print content of jar file. C : Change to specified directory. e : To indicate that entry point is mensioned in command. x : To extract the files from jar file.</description>
    </item>
    <item>
      <title>Packages in Java</title>
      <link>http://localhost:1313/posts/posts/packages-in-java/</link>
      <pubDate>Sat, 03 Sep 2022 11:27:21 +0530</pubDate>
      <guid>http://localhost:1313/posts/posts/packages-in-java/</guid>
      <description>Package Package is group of related types.&#xA;Types here mean&#xA;classes interfaces E.g. java.lang is package with basec classes of java, java.io is package with reading and writing classes&#xA;Creating package First, you have to decide on package name. You have to mension package name in each file which is to be included in that package.&#xA;package com.example.className; It must be first line of file. Each file can belong to only one package which means we can&amp;rsquo;t write above line more than once in file.</description>
    </item>
  </channel>
</rss>

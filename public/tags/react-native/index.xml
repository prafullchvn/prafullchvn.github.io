<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React-Native on Welcome to Prafull&#39;s blog</title>
    <link>http://localhost:1313/tags/react-native/</link>
    <description>Recent content in React-Native on Welcome to Prafull&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 17 Nov 2022 10:50:21 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/react-native/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Codepush Setup for Android</title>
      <link>http://localhost:1313/posts/codepush/</link>
      <pubDate>Thu, 17 Nov 2022 10:50:21 +0530</pubDate>
      <guid>http://localhost:1313/posts/codepush/</guid>
      <description>Codepush is feature that allows to make changes in code on live application.&#xA;Codepush is microsoft solution to update code. Only JS code (in case of React Native). Fastest way to apply quick changes Codepush supports React Native. In Case of react native, using codepush we can make changes in JS code only. Setting up Codepush&#xA;In order to implement there are 4 broader steps.&#xA;Create app on app center. Implement SDK in project.</description>
    </item>
    <item>
      <title>Testing in React Native Project</title>
      <link>http://localhost:1313/posts/testing-in-react-native-project/</link>
      <pubDate>Fri, 21 Oct 2022 08:33:45 +0530</pubDate>
      <guid>http://localhost:1313/posts/testing-in-react-native-project/</guid>
      <description>Setup npm install --save-dev @testing-library/react-native --legacy-peer-deps Jest function Syntax -&#xA;expecte(actual).______; // where _____ you can put building method to assert further Jest Api functions General functions expect(value).toEqual(someOtherValue); expect(value).toStrictEqual(someOtherValue); expect(value).toMatch(/someRegex/); expect(someObject).toMatchObject(subsetOfObject); expect(value).toBeTruth(); expect(value).toBeFalsy(); expect(value).toBeDefined(); expect(value).toBeUndefined(); expect(value).toBeNull(); expect(value).toBeNaN(); Based on assertion made expect.assertions(3); // ensures that 3 assertion have been made in test expect.hasAssertions(); // ensures that test have at least one assertion Asserting the array You can check whether array have particular value or not.</description>
    </item>
    <item>
      <title>Useeffect Hook in React</title>
      <link>http://localhost:1313/posts/useeffect-hook-in-react/</link>
      <pubDate>Wed, 19 Oct 2022 16:31:43 +0530</pubDate>
      <guid>http://localhost:1313/posts/useeffect-hook-in-react/</guid>
      <description>useEffect hook in react native is one of the very useful and most used hook, (at least for me it is ;) ). There are various versions of useEffect hook that I am going to talk about in this blog.&#xA;Without dependency Following version of useEffect runs the callback each time the component that it is used in is rendered.&#xA;Syntax -&#xA;useEffect(() =&amp;gt; { /** * some code here */ }); With dependency Following version of useEffect is executed each time depedency is changes.</description>
    </item>
    <item>
      <title>Problems while setting Up React Native developer environment</title>
      <link>http://localhost:1313/posts/setting-up-react-native-env/</link>
      <pubDate>Tue, 18 Oct 2022 18:21:01 +0530</pubDate>
      <guid>http://localhost:1313/posts/setting-up-react-native-env/</guid>
      <description>Build failed. Failed to execute the installDebug command in android. This problem happens mainly when your virtual device is running less on memory and is trying to install new build but failing because of insufficient storage.&#xA;To solve this -&#xA;Uninstall the previous build and try running build again. Wipe the data of virtual device You can do this by going to virtual device manager. Then Click vertical ellipsis symbol. Click on option to wipe data.</description>
    </item>
  </channel>
</rss>

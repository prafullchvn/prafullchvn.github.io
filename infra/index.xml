<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Infras on Welcome to Prafull's blog</title><link>http://prafullchvn.github.io/infra/</link><description>Recent content in Infras on Welcome to Prafull's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 17 Feb 2023 08:19:09 +0530</lastBuildDate><atom:link href="http://prafullchvn.github.io/infra/index.xml" rel="self" type="application/rss+xml"/><item><title>Provider in Tf</title><link>http://prafullchvn.github.io/infra/provider-in-tf/</link><pubDate>Fri, 17 Feb 2023 08:19:09 +0530</pubDate><guid>http://prafullchvn.github.io/infra/provider-in-tf/</guid><description>TF Provider Plugins to interact with various cloud vendors. Available in TF registry Provider configuration It is generally stored in root directory of module.
These configuration are global to all files.
provider &amp;#34;name-of-provider&amp;#34; { # config required by provider lias = &amp;#34;some-alias&amp;#34; vaersion = &amp;#34;~&amp;gt;3.0&amp;#34; } These provider need to be declared in required_provider block of terraform block.
terraform { required_providers { mycloud = { source = &amp;#34;mycorp/mycloud&amp;#34; version = &amp;#34;~&amp;gt;1.</description></item><item><title>Nodeport Service in K8</title><link>http://prafullchvn.github.io/infra/nodeport-service-in-k8/</link><pubDate>Wed, 08 Feb 2023 15:51:55 +0530</pubDate><guid>http://prafullchvn.github.io/infra/nodeport-service-in-k8/</guid><description>Here to demonstrate the use of nodeport service we will create some nginx pod and nodeport service to access it.
Deployment file apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment labels: app: nginx spec: replicas: 3 selector: matchLabels: app: testing template: metadata: labels: app: testing for: nodeport-svc spec: containers: - name: nginx image: nginx:1.14.2 ports: - containerPort: 80 Here we are creating 3 pods with nginx running inside of it. We have exposed port 80 of container.</description></item><item><title>Yaml in Kubernetes</title><link>http://prafullchvn.github.io/infra/yaml-in-kubernetes/</link><pubDate>Mon, 06 Feb 2023 15:43:13 +0530</pubDate><guid>http://prafullchvn.github.io/infra/yaml-in-kubernetes/</guid><description>Fields in kubernetes Example :
apiVersion: v1 kind: Pod metadata: name: pod-demo labels: pod-name: yaml-in-k8-tutorial spec: containers: - name: nginx-container image: nginx apiVersion - String Depending on what type of resource you are trying to create apiVersion will change.
Syntax Description POD v1 Service v1 Replica Set app/v1 Deployment app/v1 How to choose apiVersion if there are two options available:
Latest Compatiblity Depedency kind - String It is type of resource that we are trying to create.</description></item></channel></rss>